// Code generated by goa v3.0.2, DO NOT EDIT.
//
// Players endpoints
//
// Command:
// $ goa gen github.com/mashiike/restrating/design

package players

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "Players" service endpoints.
type Endpoints struct {
	CreatePlayer goa.Endpoint
}

// NewEndpoints wraps the methods of the "Players" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreatePlayer: NewCreatePlayerEndpoint(s),
	}
}

// Use applies the given middleware to all the "Players" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreatePlayer = m(e.CreatePlayer)
}

// NewCreatePlayerEndpoint returns an endpoint function that calls the method
// "create player" of service "Players".
func NewCreatePlayerEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CreatePlayerPayload)
		res, err := s.CreatePlayer(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedRestratingRrn(res, "default")
		return vres, nil
	}
}
