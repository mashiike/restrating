// Code generated by goa v3.0.2, DO NOT EDIT.
//
// Players views
//
// Command:
// $ goa gen github.com/mashiike/restrating/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// RestratingRrn is the viewed result type that is projected based on a view.
type RestratingRrn struct {
	// Type to project
	Projected *RestratingRrnView
	// View to render
	View string
}

// RestratingRrnView is a type that runs validations on a projected type.
type RestratingRrnView struct {
	// Rating Resource Name
	Rrn *string
}

var (
	// RestratingRrnMap is a map of attribute names in result type RestratingRrn
	// indexed by view name.
	RestratingRrnMap = map[string][]string{
		"default": []string{
			"rrn",
		},
	}
)

// ValidateRestratingRrn runs the validations defined on the viewed result type
// RestratingRrn.
func ValidateRestratingRrn(result *RestratingRrn) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateRestratingRrnView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateRestratingRrnView runs the validations defined on RestratingRrnView
// using the "default" view.
func ValidateRestratingRrnView(result *RestratingRrnView) (err error) {
	if result.Rrn == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("rrn", "result"))
	}
	return
}
